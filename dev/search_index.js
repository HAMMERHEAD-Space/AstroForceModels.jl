var documenterSearchIndex = {"docs":
[{"location":"lib/library/#Library","page":"Library","title":"Library","text":"","category":"section"},{"location":"lib/library/","page":"Library","title":"Library","text":"Documentation for AstroForceModels.jl.","category":"page"},{"location":"lib/library/","page":"Library","title":"Library","text":"Modules = [AstroForceModels]","category":"page"},{"location":"lib/library/#AstroForceModels.CelestialBody-Tuple{String}","page":"Library","title":"AstroForceModels.CelestialBody","text":"Creates a CelestialBody Object from a name Available: {Sun, Mercury, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune, Pluto, }\n\nArguments: -'name::String': Name of the Planet Object (Casing Doesn't Matter) -(Optional) 'T::DataType': Datatype of PlanetBody Fields\n\nReturns: -'CelestialBody': PlanetBody Object with Fields:     name::String: Name of Object     centralbody::String: Name of Central Body Being Orbited     jplcode::Int64: NAIF ID Code     ephemeris::Function: Ephemeris Object \n\nμ::T: Graviational Parameter [km/s]\nReq::T: Equatorial Radius [km]\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroForceModels.CustomCelestialBody-Tuple{String, Function}","page":"Library","title":"AstroForceModels.CustomCelestialBody","text":"Creates Custom CelestialBody Object from a name\n\nArguments: -'name::String': Name of the Planet Object (Casing Doesn't Matter) -'ephemeris::Function': Ephemeris function -(Optional) 'centralbody::String': Name of Central Body Being Orbited -(Optional) 'jplcode::Int64': NAIF ID Code -(Optional) 'μ::Number': Graviational Parameter [km/s] -(Optional) 'Req::Number': Equatorial Radius [km]\n\nReturns: -'CelestialBody': PlanetBody Object with Fields:     name::String: Name of Object     centralbody::String: Name of Central Body Being Orbited     jplcode::Int64: NAIF ID Code     ephemeris::Function: Ephemeris function     μ::Number: Graviational Parameter [km/s]     Req::Number: Equatorial Radius [km]\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroForceModels.drag_accel-Tuple{AbstractArray, Number, Number, AbstractArray, Number}","page":"Library","title":"AstroForceModels.drag_accel","text":"drag_accel(u::AbstractArray, rho::Number, BC::Number, ω_vec::AbstractArray, t::Number, [DragModel]) -> SVector{3}{Number}\n\nCompute the Acceleration Atmospheric Drag\n\nThe atmosphere is treated as a solid revolving with the Earth and the apparent velocity of the satellite is computed using the transport theorem\n\n            𝐯_app = 𝐯 - 𝛚 x 𝐫\n\nThe acceleration from drag is then computed with a cannonball model as\n\n            𝐚 = 1/2 * ρ * BC * |𝐯_app|₂^2 * v̂\n\nnote: Note\nCurrently only Cannonball Drag is supported, to use a higher fidelity drag either use a state varying function or compute the ballsitic coeffient further upstream\n\nArguments\n\nu::AbstractArray: The current state of the spacecraft in the central body's inertial frame.\nrho::Number: Atmospheric Density at (t, u) [kg/m^3].\nBC::Number: The ballistic coeffient of the satellite – (Area/mass) * Drag Coefficient [kg/m^2].\nω_vec::AbstractArray: The angular velocity vector of Earth. Typically appozimated as [0.0; 0.0; ω_Earth]\nt::Number: Current Time of the Simulation.\n\nOptional Arguments\n\nDragModel::Symbol: Drag Model to use. Current Options – :Cannonball, :None\n\nReturns\n\nSVector{3}{Number}: Inertial acceleration from Drag\n\n\n\n\n\n","category":"method"},{"location":"lib/library/#AstroForceModels.relativity_accel-Tuple{AbstractArray, Number, Number, AbstractArray, AbstractArray, Number, AbstractArray}","page":"Library","title":"AstroForceModels.relativity_accel","text":"\n\n\n\n","category":"method"},{"location":"lib/library/#AstroForceModels.third_body_accel-Tuple{AbstractArray, Number, AbstractArray}","page":"Library","title":"AstroForceModels.third_body_accel","text":"third_body_accel(u::AbstractArray, μ_body::Number, body_pos::AbstractArray, h::Number) -> SVector{3}{Number}\n\nCompute the Acceleration from a 3rd Body Represented as a Point Mass\n\nSince the central body is also being acted upon by the third body, the acceleration of body 𝐁 acting on  spacecraft 𝐀 in the orbiting body's 𝐂 is part of the force not acting on the central body\n\n            a = ∇UB(rA) - ∇UB(rC)\n\nArguments\n\nu::AbstractArray: The current state of the spacecraft in the central body's inertial frame.\nμ_body: Gravitation Parameter of the 3rd body.\nbody_pos::AbstractArray: The current position of the 3rd body in the central body's inertial frame.\n\nReturns\n\nSVector{3}{Number}: Inertial acceleration from the 3rd body\n\n\n\n\n\n","category":"method"},{"location":"man/usage/","page":"Usage","title":"Usage","text":"#TODO","category":"page"},{"location":"#AstroForceModels.jl","page":"Home","title":"AstroForceModels.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package contains the dominant astrodynamics forces affecting the orbtial trajectory of a satellite for the SatelliteToolbox.jl ecosystem. Currently this package implents:","category":"page"},{"location":"","page":"Home","title":"Home","text":"[] Zonal Harmonics\n[] Solar Radiation Pressure\n[] Drag\n[] Third Body Gravity\n[] Relativistic\n[] Albedo\n[] Solid Tides","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg\njulia> Pkg.add(\"AstroForceModels\")","category":"page"},{"location":"man/api/","page":"API","title":"API","text":"#TODO","category":"page"}]
}
